/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.uap.lfw.md;
	
import java.util.Map;

import nc.bs.logging.Logger;
import nc.lfw.core.md.util.LfwMdUtil;
import nc.md.data.access.NCObject;
import nc.md.model.IAttribute;
import nc.md.model.IBusinessEntity;
import nc.vo.jcom.lang.StringUtil;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 * 创建日期:2010-06-21 16:15:42
 * @author 
 * @version NCPrj ??
 */
public class LfwTabcodeImpl implements LfwTabcodeItf {
	private NCObject ncobject = null;
	@SuppressWarnings("unchecked")
	private Map dataMap = null;
	private Map<String, String> pathMap = null;
	public LfwTabcodeImpl(NCObject ncobject)
	{
		this.ncobject = ncobject;
		if(ncobject != null)
		{
			dataMap = ((IBusinessEntity)ncobject.getRelatedBean()).getBizInterfaceMapInfo("nc.uap.lfw.md.LfwTabcodeItf");
		}
	}
	/**
	 * 属性tabcode的Getter方法.
	 * 创建日期:2010-06-21 16:15:42
	 * @return java.lang.String
	 */
	public java.lang.String getTabcode () {
		if(dataMap == null) return null;
		IAttribute attr = (IAttribute)dataMap.get("tabcode"); //"tabcode"
		Object resObj = null;
		if(attr==null)
		{
			String path = getPathMap("tabcode");
			if(StringUtil.isEmptyWithTrim(path))
				return null;
			resObj = ncobject.getAttributeValue(path);
		}else{	
			attr.setContainer(ncobject.getRelatedBean());
			resObj = ncobject.getAttributeValue(attr);
		}
		
		if(resObj == null)
			return null;
		if(resObj instanceof java.lang.String)
			return (java.lang.String)resObj;
		else
			Logger.error("类型和接口类型不匹配!接口类型："+
					String.class.getName()+"，属性实际类型:"+resObj.getClass().getName());
		
		return null;		
	}   
	//取得接口属性和实体路径的映射
	private String getPathMap(String key){
		return LfwMdUtil.getMdItfAttr((IBusinessEntity)ncobject.getRelatedBean(), "nc.uap.lfw.md.LfwTabcodeItf", key);
	}	
} 
